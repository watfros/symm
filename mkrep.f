c   Copyright (C) 2016 Laszlo Gyevi-Nagy, Gyula Tasi
c
c   This file is part of SYVA.
c
c   SYVA is free software; you can redistribute it and/or
c   modify it under the terms of the GNU Lesser General Public
c   License as published by the Free Software Foundation; either
c   version 2.1 of the License, or (at your option) any later version.
c
c   SYVA is distributed in the hope that it will be useful,
c   but WITHOUT ANY WARRANTY; without even the implied warranty of
c   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
c   Lesser General Public License for more details.
c
c   You should have received a copy of the GNU Lesser General Public
c   License along with SYVA; if not, write to the Free Software
c   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

************************************************************************
      subroutine mkrep(natoms,nsg,ncr,nsr,nsym,nn,nsymu,rep)
************************************************************************
c
c Subroutine mkrep costructs the representation generated by the normal
c coordinates
c
      implicit double precision(a-h,o-z)
      implicit integer(i-n)
      parameter(nmax=150)
      dimension nsym(nmax,5),rep(nmax),nsymu(nmax,5)
      pi=4.d0*datan(1.d0)
c
c Selecting different symmetry operations.
c
      nsymu(1,1)=4
      nsymu(1,2)=0
      nsymu(1,3)=0
      nsymu(1,4)=0
      nsymu(1,5)=natoms
      if(nsym(1,2).eq.1) then
         nsymu(2,1)=0
         nsymu(2,2)=1
         nsymu(2,3)=nsym(1,3)
         nsymu(2,4)=0
         nsymu(2,5)=nsym(1,5)
         ii=2
      else
         ii=1
      end if
      do i=nsg+ncr+2,nsg+ncr+nsr+1
         do j=1,ii
            if(mod(nsym(i,2),2).eq.0) then
               if(nsymu(j,1).eq.nsym(i,1).and.
     &            nsymu(j,2).eq.nsym(i,2).and.
     &           (nsymu(j,3).eq.nsym(i,3).or.
     &            nsymu(j,3).eq.nsym(i,2)-nsym(i,3)).and.
     &            nsymu(j,4).eq.nsym(i,4).and.
     &            nsymu(j,5).eq.nsym(i,5)) goto 10
            else
               if(nsymu(j,1).eq.nsym(i,1).and.
     &            nsymu(j,2).eq.nsym(i,2).and.
     &           (nsymu(j,3).eq.nsym(i,3).or.
     &            nsymu(j,3).eq.2*nsym(i,2)-nsym(i,3)).and.
     &            nsymu(j,4).eq.nsym(i,4).and.
     &            nsymu(j,5).eq.nsym(i,5)) goto 10
            end if
         end do
         ii=ii+1
         nsymu(ii,1)=nsym(i,1)
         nsymu(ii,2)=nsym(i,2)
         if(mod(nsym(i,2),2).eq.0) then
            nsymu(ii,3)=min0(nsym(i,3),nsym(i,2)-nsym(i,3))
         else
            nsymu(ii,3)=min0(nsym(i,3),2*nsym(i,2)-nsym(i,3))
         end if
         nsymu(ii,4)=nsym(i,4)
         nsymu(ii,5)=nsym(i,5)
 10      continue
      end do
      do i=nsg+2,nsg+ncr+1
         do j=1,ii
            if(nsymu(j,1).eq.nsym(i,1).and.
     &         nsymu(j,2).eq.nsym(i,2).and.
     &        (nsymu(j,3).eq.nsym(i,3).or.
     &         nsymu(j,3).eq.nsym(i,2)-nsym(i,3)).and.
     &         nsymu(j,5).eq.nsym(i,5)) then
               if(nsym(i,2).eq.2.and.
     &            nsymu(j,4).eq.nsym(i,4)) then
                  goto 20
               elseif(nsym(i,2).ne.2) then
                  goto 20
               end if
            end if
         end do
         ii=ii+1
         nsymu(ii,1)=nsym(i,1)
         nsymu(ii,2)=nsym(i,2)
         nsymu(ii,3)=min0(nsym(i,3),nsym(i,2)-nsym(i,3))
         nsymu(ii,4)=nsym(i,4)
         nsymu(ii,5)=nsym(i,5)
 20      continue
      end do
      do i=2,nsg+1
         do j=1,ii
            if(nsymu(j,1).eq.nsym(i,1).and.
     &         nsymu(j,2).eq.nsym(i,2).and.
     &         nsymu(j,3).eq.nsym(i,3).and.
     &         nsymu(j,4).eq.nsym(i,4).and.
     &         nsymu(j,5).eq.nsym(i,5)) goto 30
         end do
         ii=ii+1
         nsymu(ii,1)=nsym(i,1)
         nsymu(ii,2)=nsym(i,2)
         nsymu(ii,3)=nsym(i,3)
         nsymu(ii,4)=nsym(i,4)
         nsymu(ii,5)=nsym(i,5)
 30      continue
      end do
c
c Generating reducible representation.
c
      do i=1,ii
         if(nsymu(i,1).eq.4) then
            cont=3.d0
         elseif(nsymu(i,1).eq.0) then
            cont=-3.d0
         elseif(nsymu(i,1).eq.3) then
            cont=-1.d0+2.d0*
     &         dcos(2.d0*pi*dble(nsymu(i,3))/dble(nsymu(i,2)))
         elseif(nsymu(i,1).eq.2) then
            cont=1.d0+2.d0*
     &         dcos(2.d0*pi*dble(nsymu(i,3))/dble(nsymu(i,2)))
         elseif(nsymu(i,1).eq.1) then
            cont=1.d0
         end if
         rep(i)=dble(nsymu(i,5))*cont
      end do
      nn=ii
      end
